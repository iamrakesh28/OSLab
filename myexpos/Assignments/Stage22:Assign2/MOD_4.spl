//Device Manager Module

alias funcNum R1;
alias currPID R2;

//  Disk Load
if (funcNum == 2)
then
	// Acquire Disk
	alias page R3;
	alias block R4;
	multipush(R1, R2, R3, R4);
	R1 = 3;
	R2 = currPID;
	call MOD_0;
	multipop(R1, R2, R3, R4);

	[DISK_STATUS_TABLE + 1] = 0;
	[DISK_STATUS_TABLE + 2] = page;
	[DISK_STATUS_TABLE + 3] = block;
	
	[127 * 512 + 1] = [127 * 512 + 1] + 1;
	load(page, block);
	[PROCESS_TABLE + currPID * 16 + 4] = WAIT_DISK;
	multipush(R1, R2, R3, R4);
	call MOD_5;
	multipop(R1, R2, R3, R4);
	return;
endif;

// Write Terminal
if (funcNum == 3)
then
	// Acquire Terminal
	alias word R3;
	multipush(R1, R2, R3);
	R1 = 8;
	R2 = currPID;
	call MOD_0;
	multipop(R1, R2, R3);
	print word;
	// Release Terminal
	multipush(R1, R2, R3);
	R1 = 9;
	R2 = currPID;
	call MOD_0;
	multipop(R1, R2, R3);
	return;
endif;

// Read Terminal
if (funcNum == 4)
then
	// Acquire Terminal
	alias word_add R3;
	multipush(R1, R2, R3);
	R1 = 8;
	R2 = currPID;
	call MOD_0;
	multipop(R1, R2, R3);
	read;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4] = WAIT_TERMINAL;
	multipush(R1, R2, R3);
	call MOD_5;
	multipop(R1, R2, R3);
	alias phy R4;
	phy = [PTBR + 2 * (word_add / 512)] * 512 + word_add % 512;
	[phy] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 8];
	return;
endif;
return;
